# .github/workflows/docker-deploy.yml
name: Build and Push Docker Image to Docker Hub

# This workflow runs on every push to your "main" branch
on:
  push:
    branches: ["main"]

jobs:
  build_and_push:
    runs-on: ubuntu-latest # Use a standard Linux runner

    steps:
      # 1. Check out your code from the repo
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up Docker Buildx (enhances build capabilities)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3. Log in to Docker Hub using your secrets stored in GitHub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # 4. Build your Dockerfile and push it to Docker Hub with the 'latest' tag
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Use the current directory as the build context
          push: true # Push the image after building

          tags: carlosm1/public-domain-library:latest
          cache-from: type=gha # Enable GitHub Actions cache for faster builds
          cache-to: type=gha,mode=max

      # 5. Send a request to your Render Deploy Hook to trigger deployment
      - name: Trigger Render Deploy
        run: |
          curl -X GET ${{ secrets.RENDER_DEPLOY_HOOK }}
